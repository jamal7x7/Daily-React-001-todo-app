{"version":3,"file":"static/webpack/static/development/pages/Login.js.b58ff539aafd2770b53e.hot-update.js","sources":["webpack:///./components/ui/DropMenu.js"],"sourcesContent":["import React from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n  \n  .options-dropdown {\n    position: relative;\n    /* display: inline-block; */\n    z-index: 20000;\n    \n  }\n\n  .options-content {\n    /* display: none; */\n    /* right: 10px; */\n    top: 20px;\n    position: absolute;\n    background-color: ${({ theme }) => theme.colors.bgm};\n    border-radius: 8px;\n    min-width: 200px;\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    display: block;\n    z-index: 1;\n\n    .options-content-text {\n      padding: 16px;\n      display: grid;\n      grid-template-columns: 40px 1fr;\n      grid-template-rows: auto;\n      align-items: center;\n    }\n    \n    .options-content-text:hover {\n      background:#00000020;\n      /* color:${({ theme }) => theme.colors.primary};  */\n      color: ${({ theme }) => theme.colors.text}; \n      /* background: ${({ theme }) => theme.colors.primary};  */\n      \n    }\n  }\n`\n\nconst DropMenu = ({ children, showMenu }) => {\n  const sp = useSpring({\n    // opacity: optionsMenuIsShown ? 1 : 0,\n    transform: showMenu ? 'scale(1)' : 'scale(0.1)',\n    // from: { opacity: 0 },\n    // color: !optionsMenuIsShown ? \"tomato\" : \"#8c4ef8\",\n\n    // config: { duration: 150 },\n    config: { mass: 1, tension: 500, friction: 30 }\n  })\n  return (\n    <Styles>\n      <animated.div style={sp} className='options-dropdown'>\n        <div className='options-content'>\n          <div> {children} </div>\n        </div>\n      </animated.div>\n    </Styles>\n  )\n}\n\nexport default DropMenu\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAcA;AAAA;AAAA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}