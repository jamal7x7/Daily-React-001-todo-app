{"version":3,"file":"static/webpack/static/development/pages/index.js.04eb73495e9843e7721c.hot-update.js","sources":["webpack:///./components/sidebar/AddProjectButton.js","webpack:///./components/sidebar/ProjectList.js","webpack:///./components/sidebar/Sidebar.js","webpack:///./components/sidebar/SidebarTab.js","webpack:///./components/sidebar/UserInfo.js","webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Styles = styled.div`\n  .addProject {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 52px;\n\n    margin-left: 50px;\n    // height: 10px;\n    border-top: 1px solid #eeeeee20;\n    color: #eeeeee40;\n    cursor: pointer;\n    /* box-sizing: inside-box; */\n    /* background: red; */\n\n    &:hover {\n      color: #8c4ef8;\n    }\n\n    .addListIcon {\n      display: grid;\n      place-items: center;\n    }\n    .addListText {\n      display: grid;\n      place-items: center start;\n      padding-left: 10px;\n      font-size: 12px;\n      font-weight: bold;\n      margin: 0;\n    }\n  }\n\n  .todoNum {\n    grid-area: \"TodoNum\";\n    display: grid;\n    place-items: center;\n    background: #8c4ef8;\n  }\n`\n\nconst AddProjectButton = ({ handleAddListIsShown }) => (\n  <Styles>\n    <div className='addProject' onClick={e => handleAddListIsShown(e)}>\n      <div className='addListIcon'>\n        <svg width='14' height='14' viewBox='0 0 14 14' fill='none'>\n          <path\n            d='M6 0.57735C6.6188 0.220085 7.3812 0.220085 8 0.57735L12.0622 2.92265C12.681 3.27992 13.0622 3.94017 13.0622 4.6547V9.3453C13.0622 10.0598 12.681 10.7201 12.0622 11.0774L8 13.4227C7.3812 13.7799 6.6188 13.7799 6 13.4226L1.93782 11.0773C1.31902 10.7201 0.937822 10.0598 0.937822 9.3453V4.6547C0.937822 3.94017 1.31902 3.27992 1.93782 2.92265L6 0.57735Z'\n            fill='#8c4ef8'\n          />\n          <rect x='6' y='4' width='2' height='6' rx='1' fill='#062659' />\n          <rect\n            x='10'\n            y='6'\n            width='2'\n            height='6'\n            rx='1'\n            transform='rotate(90 10 6)'\n            fill='#062659'\n          />\n        </svg>\n      </div>\n      <p className='addListText'> Add Project </p>\n    </div>\n  </Styles>\n)\nexport default AddProjectButton\n","import React, { useContext } from \"react\"\nimport styled from \"styled-components\"\nimport { MyProjectsContext } from \"./ProjectsContext\"\n\nconst Styles = styled.section`\n  .projectListAndForm {\n    overflow-x: scroll;\n\n    height: 255px;\n    // margin-top: -10px;\n\n    .projectList {\n      display: grid;\n      grid-template-columns: auto 1fr 28px;\n      grid-template-rows: auto;\n\n      padding-left: 50px;\n      height: 52px;\n      color: ${({ theme }) => theme.colors.textLight};\n      cursor: pointer;\n\n      &:hover {\n        color: #ff00f5;\n        background: #00000020;\n      }\n      &:hover .projectNum {\n        // background: #8c4ef8;\n        color: #ff00f5;\n      }\n      .projectIcon {\n        display: grid;\n        place-items: center;\n      }\n      .projectText {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        padding-left: 10px;\n        font-size: 14px;\n        overflow-x: auto;\n      }\n      .projectNum {\n        display: grid;\n        place-items: center;\n        font-size: 12px;\n        color: #eeeeee33;\n      }\n    }\n  }\n\n  input {\n    box-sizing: border-box;\n\n    width: 100%;\n    border: 0 solid #073175;\n    background: #00000000;\n    color: ${({ theme }) => theme.colors.textLight};\n    // font-size: 16px;\n    outline: none;\n    // margin-bottom: 16px;\n  }\n\n  .projectListForm {\n    display: grid;\n    grid-template-columns: auto 1fr 28px;\n    grid-template-rows: auto;\n\n    padding-left: 50px;\n    height: 52px;\n    margin-top: -10px;\n    color: rgba($text, 0.5);\n    cursor: pointer;\n\n    &:hover {\n      color: #ff00f5;\n      background: #00000020;\n    }\n    &:hover .projectNum {\n      // background: $primary2;\n      color: #ff00f5;\n    }\n    .projectIcon {\n      display: grid;\n      place-items: center;\n    }\n    .projectText {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      color: ${({ theme }) => theme.colors.textLight};\n\n      padding-left: 10px;\n      font-size: 14px;\n      form {\n        input {\n          font-size: 14px;\n          color: #ff00f5;\n        }\n      }\n    }\n    .projectNum {\n      display: grid;\n      place-items: center;\n      font-size: 12px;\n      color: #eeeeee33;\n    }\n  }\n`\n\nconst ProjectList = ({\n  addListIsShown,\n  addListRef,\n  // projects,\n  // handleAddList,\n  // handleDeleteList,\n  handleAddListIsShown\n}) => {\n  const { projects, projectDispatch } = useContext(MyProjectsContext)\n\n  const handleAddList = e => {\n    e.preventDefault()\n\n    const text = addListRef.current.value\n    if (text) {\n      projectDispatch({\n        type: \"ADD_LIST\",\n        id: Date.now(),\n        projectName: text\n      })\n    }\n\n    addListRef.current.value = \"\"\n  }\n\n  const handleDeleteList = (e, id) => {\n    e.preventDefault()\n\n    projectDispatch({\n      type: \"DELETE_LIST\",\n      id: id\n    })\n  }\n\n  return (\n    <Styles>\n      <div className=\"projectListAndForm\">\n        {projects.map(p => (\n          <div className=\"projectList\">\n            <div className=\"projectIcon\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n                <path\n                  d=\"M6 0.57735C6.6188 0.220085 7.3812 0.220085 8 0.57735L12.0622 2.92265C12.681 3.27992 13.0622 3.94017 13.0622 4.6547V9.3453C13.0622 10.0598 12.681 10.7201 12.0622 11.0774L8 13.4227C7.3812 13.7799 6.6188 13.7799 6 13.4226L1.93782 11.0773C1.31902 10.7201 0.937822 10.0598 0.937822 9.3453V4.6547C0.937822 3.94017 1.31902 3.27992 1.93782 2.92265L6 0.57735Z\"\n                  // fill=\"#FF00F5\"\n                  style={{ fill: \"hsl(0, 100%, 50%)\" }}\n                  // fill={\n                  //   \"hsl(\" +\n                  //   [0, 0, 0]\n                  //     .map(function() {\n                  //       return Math.round(100 * Math.random()) + \"%\"\n                  //     })\n                  //     .join(\",\") +\n                  //   \")\"\n                  // }\n                />\n              </svg>\n            </div>\n            <div className=\"projectText\">\n              {\" \"}\n              <p> {p.projectName} </p>\n              <p onClick={e => handleDeleteList(e, p.id)}>x</p>{\" \"}\n            </div>\n            <div className=\"projectNum\">{p.remainingTodos}</div>\n          </div>\n        ))}\n\n        {addListIsShown && (\n          <div className=\"projectListForm\">\n            <div className=\"projectIcon\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n                <path\n                  d=\"M6 0.57735C6.6188 0.220085 7.3812 0.220085 8 0.57735L12.0622 2.92265C12.681 3.27992 13.0622 3.94017 13.0622 4.6547V9.3453C13.0622 10.0598 12.681 10.7201 12.0622 11.0774L8 13.4227C7.3812 13.7799 6.6188 13.7799 6 13.4226L1.93782 11.0773C1.31902 10.7201 0.937822 10.0598 0.937822 9.3453V4.6547C0.937822 3.94017 1.31902 3.27992 1.93782 2.92265L6 0.57735Z\"\n                  fill=\"#4c5f7e\"\n                />\n              </svg>\n            </div>\n            <div className=\"projectText\">\n              <form onSubmit={e => handleAddList(e)}>\n                <input type=\"text\" ref={addListRef} autoFocus />\n              </form>\n            </div>\n            <div className=\"projectNum\" onClick={e => handleAddListIsShown(e)}>\n              x\n            </div>\n          </div>\n        )}\n      </div>\n    </Styles>\n  )\n}\n\nexport default ProjectList\n","import React from 'react'\nimport styled from 'styled-components'\nimport AddProjectButton from './AddProjectButton'\nimport ProjectList from './ProjectList'\nimport SidebarTab from './SidebarTab'\nimport UserInfo from './UserInfo'\n\nconst Styles = styled.div`\n  .todoSideBtn {\n    padding: 0 16px 0 36px;\n\n    .sideBtn {\n      height: 52px;\n      border-radius: 8px;\n      padding-left: 16px;\n      display: grid;\n      grid-template-columns: 1fr 28px;\n      grid-template-rows: auto;\n      cursor: pointer;\n      &:hover {\n        background: ${({ theme }) => theme.colors.bgl};\n        color: ${({ theme }) => theme.colors.text};\n      }\n      &:hover .todoListNum {\n        // background: $primary2;\n        color: ${({ theme }) => theme.colors.text};\n      }\n      .todoSideBtnLabel {\n        display: grid;\n        place-items: center start;\n        color: ${({ theme }) => theme.colors.textLight};\n      }\n      &:hover .todoSideBtnLabel {\n        color: ${({ theme }) => theme.colors.text};\n      }\n      .todoSideBtnNum {\n        display: grid;\n        place-items: center;\n        font-size: 12px;\n        color: ${({ theme }) => theme.colors.textLight};\n      }\n    }\n  }\n`\n\nconst Sidebar = () => (\n  <Styles>\n    <div className='sideBar'>\n      <UserInfo />\n\n      <div className='sideBarList'>\n        <SidebarTab>Todos</SidebarTab>\n        <SidebarTab>Calendar</SidebarTab>\n\n        <div className='projects'> Projects </div>\n\n        <ProjectList\n          addListIsShown={addListIsShown}\n          handleAddListIsShown={handleAddListIsShown}\n          // handleAddList={handleAddList}\n          // handleDeleteList={handleDeleteList}\n          addListRef={addListRef}\n          // projects={projects}\n        />\n        <AddProjectButton handleAddListIsShown={handleAddListIsShown} />\n      </div>\n    </div>\n  </Styles>\n)\n\nexport default Sidebar\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n  .todoSideBtn {\n    padding: 0 16px 0 36px;\n\n    .sideBtn {\n      height: 52px;\n      border-radius: 8px;\n      padding-left: 16px;\n      display: grid;\n      grid-template-columns: 1fr 28px;\n      grid-template-rows: auto;\n      cursor: pointer;\n      &:hover {\n        background: ${({ theme }) => theme.colors.bgl};\n        color: ${({ theme }) => theme.colors.text};\n      }\n      &:hover .todoListNum {\n        // background: $primary2;\n        color: ${({ theme }) => theme.colors.text};\n      }\n      .todoSideBtnLabel {\n        display: grid;\n        place-items: center start;\n        color: ${({ theme }) => theme.colors.textLight};\n      }\n      &:hover .todoSideBtnLabel {\n        color: ${({ theme }) => theme.colors.text};\n      }\n      .todoSideBtnNum {\n        display: grid;\n        place-items: center;\n        font-size: 12px;\n        color: ${({ theme }) => theme.colors.textLight};\n      }\n    }\n  }\n`\n\nconst SidebarTab = ({ children }) => (\n  <Styles>\n    <div className='todoSideBtn'>\n      <div className='sideBtn'>\n        <div className='todoSideBtnLabel'> {children} </div>\n        <div className='todoSideBtnNum'>3</div>\n      </div>\n    </div>\n  </Styles>\n)\n\nexport default SidebarTab\n","import React from 'react'\nimport styled from 'styled-components'\nimport { AvatarSvg } from '../svg'\n\nconst Styles = styled.div`\n  .userCard {\n    background: #000;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    /* padding-left: 50px; */\n    height: 100%;\n\n    .userCardAvatar {\n      display: grid;\n      place-items: center;\n    }\n    .userCardName {\n      display: grid;\n      grid-template-columns: auto auto;\n      place-items: center;\n\n      /* padding-left: 16px; */\n      background: #f00;\n    }\n  }\n`\n\nconst UserInfo = () => (\n  <Styles>\n    <div className='userCard'>\n      <div className='userCardAvatar'>\n        <AvatarSvg />\n      </div>\n      <div className='userCardName'>\n        <p>Jamal</p>\n        <div>||</div>\n      </div>\n    </div>\n  </Styles>\n)\n\nexport default UserInfo\n","import React, { useEffect, useReducer, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport Layout from '../components/Layout'\nimport { MyProjectsProvider } from '../components/sidebar/ProjectsContext'\nimport Sidebar from '../components/sidebar/Sidebar'\nimport TodoList from '../components/TodoList'\nimport { MyTodosProvider } from '../components/TodosContext'\n\nconst Styles = styled.div`\n  .wrapper {\n    width: 100%;\n    height: 100%;\n\n    // padding: 20px;\n    // border: 1px solid rgba(#fff, 0.08);\n    border-radius: 4px;\n    // background-color: $bgm;\n    // border: 1px solid $bgl;\n    // box-shadow: 0 90px 100px -50px rgba(black, 0.4),\n    //   0 50px 70px 10px rgba(black, 0.1);\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 1fr;\n    grid-template-areas: ' sideBar  content ';\n  }\n\n  // * /////////////////////////////////////////////SIDE-BAR/////////////////////////////////////////////// * //\n\n  .sideBar {\n    grid-area: 'sideBar';\n    background: ${({ theme }) => theme.colors.sideBar};\n    border-radius: 4px 0 0 4px;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 140px 1fr;\n    resize: horizontal;\n    overflow: auto;\n  }\n\n  /* .userCard {\n    display: grid;\n    grid-template-columns: 50px 1fr;\n    padding-left: 50px;\n    .userCardAvatar {\n      display: grid;\n      place-items: center;\n    }\n    .userCardName {\n      display: grid;\n      place-items: center start;\n      padding-left: 16px;\n    }\n  } */\n\n  .sideBarList {\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto auto 30px 170px auto;\n    align-content: start;\n    grid-gap: 10px;\n    // height: 100%;\n  }\n\n  .projects {\n    padding-left: 50px;\n    height: 52px;\n    display: grid;\n    place-items: center start;\n  }\n\n  // * ///////////////////////////////////////CONTENT///////////////////////////////////// * //\n\n  .content {\n    grid-area: 'content';\n    background: ${({ theme }) => theme.colors.bgd};\n\n    overflow-anchor: none;\n    border-radius: 0 4px 4px 0;\n  }\n\n  .anchor {\n    overflow-anchor: auto;\n    height: 1px;\n  }\n`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: action.completed\n        }\n      ]\n\n    case 'COMPLETED':\n      return state.map(v => {\n        if (v.id === action.id) {\n          v = { ...v, completed: !v.completed }\n        }\n        return v\n      })\n\n    case 'REORDER':\n      return [...action.reorderedTodos]\n\n    case 'DELETED':\n      return state.filter(v => v.id !== action.id)\n\n    case 'RESET': {\n      console.log(action)\n      return action.payload\n    }\n\n    default:\n      return state\n  }\n}\n\nconst projectsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_LIST':\n      return [\n        ...state,\n        {\n          id: action.id,\n          projectName: action.projectName,\n          totalTodos: 0,\n          remainingTodos: 0\n        }\n      ]\n\n    case 'DELETE_LIST':\n      return state.filter(v => v.id !== action.id)\n\n    default:\n      return state\n  }\n}\n\nconst Index = () => {\n  const addListRef = useRef()\n  const didRun = useRef(false)\n\n  const [addTaskIsShown, setAddTaskIsShown] = useState(false)\n  const [addListIsShown, setAddListIsShown] = useState(false)\n\n  const [todos, dispatch] = useReducer(reducer, [\n    {\n      id: Date.now(),\n      text: 'Read',\n      // completed: true,\n      project: 'default'\n    },\n    {\n      id: Date.now() + 1,\n      text: 'Run',\n      // completed: false,\n      project: 'default'\n    },\n    {\n      id: Date.now() + 2,\n      text: 'Pray',\n      // completed: false,\n      project: 'default'\n    }\n  ])\n  const [projects, projectDispatch] = useReducer(projectsReducer, [\n    {\n      id: Date.now(),\n      projectName: 'Design',\n      totalTodos: 0,\n      remainingTodos: 0\n    }\n  ])\n\n  useEffect(() => {\n    if (!didRun.current) {\n      const raw = localStorage.getItem('data')\n      dispatch({\n        type: 'RESET',\n        payload: JSON.parse(raw)\n      })\n      didRun.current = true\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(todos))\n  }, [todos])\n\n  const handleCheckBox = (e, id) => {\n    e.preventDefault()\n    // console.log(\"done\")\n\n    dispatch({\n      type: 'COMPLETED',\n      id: id,\n      completed: true\n    })\n  }\n\n  const handleAddTask = e => {\n    setAddTaskIsShown(prev => !prev)\n  }\n\n  // a little function to help us with reordering the result\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n  }\n\n  const handleOnDragEnd = result => {\n    // e.preventDefault()\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    if (result.destination.index === result.source.index) {\n      return\n    }\n\n    const reorderedTodos = reorder(\n      todos,\n      result.source.index,\n      result.destination.index\n    )\n    console.log('to', reorderedTodos)\n\n    dispatch({\n      type: 'REORDER',\n      reorderedTodos\n    })\n  }\n\n  const handleAddListIsShown = e => {\n    setAddListIsShown(prev => !prev)\n  }\n\n  return (\n    <Layout>\n      <Styles>\n        <MyProjectsProvider value={{ projects, projectDispatch }}>\n          <MyTodosProvider value={{ todos, dispatch }}>\n            <div className='wrapper'>\n              <Sidebar />\n\n              <div className='content'>\n                <TodoList\n                  // todos={todos}\n                  handleOnDragEnd={handleOnDragEnd}\n                  handleCheckBox={handleCheckBox}\n                  // handleDeleteTodo={handleDeleteTodo}\n                  addTaskIsShown={addTaskIsShown}\n                  // inputRef={inputRef}\n                  handleAddTask={handleAddTask}\n                  // handleSubmit={handleSubmit}\n                />\n              </div>\n            </div>\n          </MyTodosProvider>\n        </MyProjectsProvider>\n      </Styles>\n    </Layout>\n  )\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAuCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AACA;AAwBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AAEA;AAcA;AAAA;AAAA;AAuCA;AAAA;AAAA;AAiCA;AAAA;AAAA;AACA;AAmBA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAKA;AAAA;AAAA;AAGA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAJA;AAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AACA;AAwBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AAEA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAKA;AAAA;AAAA;AAGA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AAEA;AACA;AAuBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAsBA;AAAA;AAAA;AA6CA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAGA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AASA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AApBA;AAAA;AAAA;AACA;AADA;AA6BA;AACA;AACA;AACA;AAJA;AA5BA;AAAA;AAAA;AACA;AAmCA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AALA;AAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;;;;A","sourceRoot":""}