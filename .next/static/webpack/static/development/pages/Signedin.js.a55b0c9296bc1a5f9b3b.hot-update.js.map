{"version":3,"file":"static/webpack/static/development/pages/Signedin.js.a55b0c9296bc1a5f9b3b.hot-update.js","sources":["webpack:///./components/sidebar/UserInfo.js","webpack:///./components/ui/DropMenu.js"],"sourcesContent":["import Link from 'next/link'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { AvatarSvg, UserSettingsMenuSvg } from '../svg'\nimport DropMenu from '../ui/DropMenu'\n\nconst Styles = styled.div`\n  .userCard {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 2fr 1fr;\n    /* padding-left: 50px; */\n    height: 100%;\n\n    .userCardAvatar {\n      margin-bottom: 4px;\n      /* background: #000; */\n      display: grid;\n      place-items: end center;\n    }\n    .userCardName {\n      margin-top: 4px;\n      display: flex;\n      justify-content: center;\n      align-items: start;\n      cursor: pointer;\n\n      /* place-items: start center; */\n\n      /* padding-left: 16px; */\n      /* background: #f00; */\n    }\n\n    .userSettingsMenu {\n      padding-left: 8px;\n    }\n  }\n`\n\nconst UserInfo = () => {\n  const [showMenu, setShowMenu] = useState(false)\n\n  return (\n    <Styles>\n      <div className='userCard'>\n        <div className='userCardAvatar'>\n          <AvatarSvg />\n        </div>\n        <div className='userCardName' onClick={() => setShowMenu(!showMenu)}>\n          <div>Jamal</div>\n          <div className='userSettingsMenu'>\n            <UserSettingsMenuSvg />\n          </div>\n        </div>\n        {showMenu && (\n          <DropMenu>\n            <div>\n              <Link href='/Login'>\n                <a>Logout</a>\n              </Link>\n            </div>\n          </DropMenu>\n        )}\n      </div>\n    </Styles>\n  )\n}\n\nexport default UserInfo\n","import React from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n  \n  .options-dropdown {\n    position: relative;\n    /* display: inline-block; */\n    z-index: 200;\n    \n  }\n\n  .options-content {\n    /* display: none; */\n    right: 10px;\n    top: 20px;\n    position: absolute;\n    background-color: ${({ theme }) => theme.colors.bgm};\n    border-radius: 8px;\n    min-width: 200px;\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    display: block;\n    z-index: 1;\n\n    .options-content-text {\n      padding: 16px;\n      display: grid;\n      grid-template-columns: 40px 1fr;\n      grid-template-rows: auto;\n      align-items: center;\n    }\n    \n    .options-content-text:hover {\n      background:#00000020;\n      /* color:${({ theme }) => theme.colors.primary};  */\n      color: ${({ theme }) => theme.colors.text}; \n      /* background: ${({ theme }) => theme.colors.primary};  */\n      \n    }\n  }\n`\n\nconst DropMenu = ({ children }) => {\n  const sp = useSpring({\n    // opacity: optionsMenuIsShown ? 1 : 0,\n    transform: optionsMenuIsShown ? 'scale(1)' : 'scale(0.1)',\n    // from: { opacity: 0 },\n    // color: !optionsMenuIsShown ? \"tomato\" : \"#8c4ef8\",\n\n    // config: { duration: 150 },\n    config: { mass: 1, tension: 500, friction: 30 }\n  })\n  return (\n    <Styles>\n      <animated.div style={sp} className='options-dropdown'>\n        <div className='options-content'>\n          <div className='inner'> {children} </div>\n          <div className='options-content-text'>\n            <p> || </p>\n            <p>Edit</p>\n          </div>\n          <div className='options-content-text'>\n            <p> || </p>\n            <p>Add to Project</p>\n          </div>\n          <div className='options-content-text'>\n            <p> || </p>\n            <p>Priority</p>\n          </div>\n        </div>\n      </animated.div>\n    </Styles>\n  )\n}\n\nexport default DropMenu\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAgCA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AAEA;AAcA;AAAA;AAAA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}