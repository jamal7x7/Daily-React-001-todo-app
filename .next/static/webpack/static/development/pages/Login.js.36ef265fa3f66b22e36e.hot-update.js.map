{"version":3,"file":"static/webpack/static/development/pages/Login.js.36ef265fa3f66b22e36e.hot-update.js","sources":["webpack:///./pages/Login.js"],"sourcesContent":["import Link from 'next/link'\nimport { lighten } from 'polished'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport styled, { css } from 'styled-components'\nimport Layout from '../components/Layout'\nimport { UserInfo } from '../components/sidebar'\nimport { AvatarSvg, SubmitSvg } from '../components/svg'\nimport Align from '../components/ui/Align'\nimport Button from '../components/ui/Button'\nimport Divider from '../components/ui/Divider'\nimport Tab from '../components/ui/Tab'\nimport Tabs from '../components/ui/Tabs'\nimport TextField from '../components/ui/TextField'\n\nconst ShowHide = styled.div`\n  ${props =>\n    props.hide &&\n    css`\n      display: none;\n    `}\n`\n\nconst Styles = styled.div`\n  height: 100%;\n\n  .wrapper {\n    width: 100%;\n    height: 100%;\n\n    border-radius: 4px;\n\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 1fr;\n    grid-template-areas: ' sideBar  content ';\n  }\n\n  // * /////////////////////////////////////////////SIDE-BAR/////////////////////////////////////////////// * //\n\n  .sideBarList {\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto auto 30px 170px auto;\n    align-content: start;\n    grid-gap: 10px;\n    // height: 100%;\n  }\n\n  .projects {\n    padding-left: 50px;\n    height: 52px;\n    display: grid;\n    place-items: center start;\n  }\n  .sideBar {\n    grid-area: 'sideBar';\n    height: 100%;\n    background: ${({ theme }) => theme.colors.sideBar};\n    border-radius: 4px 0 0 4px;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 160px 1fr 52px;\n    /* resize: horizontal; */\n    overflow: auto;\n  }\n  .sidebarMain {\n    /* background: #00f; */\n    overflow: scroll;\n  }\n  .mode {\n    /* background: #000; */\n    z-index: 10;\n    border-top: 1px solid #eeeeee20;\n    display: grid;\n    place-items: center start;\n    padding-left: 52px;\n  }\n  // * ///////////////////////////////////////CONTENT///////////////////////////////////// * //\n\n  .content {\n    grid-area: 'content';\n    background: ${({ theme }) => theme.colors.bgd};\n\n    overflow-anchor: none;\n    border-radius: 0 4px 4px 0;\n  }\n\n  .anchor {\n    overflow-anchor: auto;\n    height: 1px;\n  }\n`\n\nconst Icon = styled.div`\n  grid-area: 'addIcon';\n  display: grid;\n  place-items: center;\n  /* background: #000; */\n  .active {\n    background: #00f;\n  }\n\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.03);\n    svg > path {\n      fill: ${({ theme }) => lighten(0.05, theme.colors.primary)};\n    }\n  }\n`\nconst IconFlat = styled.div`\n  grid-area: 'addIcon';\n  display: grid;\n  place-items: center;\n  /* background: #000; */\n  .active {\n    background: #00f;\n  }\n\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.03);\n    svg > path {\n      fill: ${({ theme }) => lighten(0.1, theme.colors.bgl)};\n    }\n    svg rect {\n      fill: ${({ theme }) => lighten(0.05, theme.colors.bgd)};\n      /* fill: ${({ theme }) => lighten(0.05, theme.colors.primary)}; */\n    }\n  }\n`\n\nconst Label = styled.p`\n  color: ${({ theme }) => theme.colors.textLightBlue};\n  font-size: ${({ theme }) => theme.fontSizes[1]}px;\n  margin-bottom: 8px;\n  /* padding: 13px 16px; */\n  /* margin-bottom: 16px; */\n`\nconst InputWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0px;\n  grid-template-rows: 1fr;\n  background: #00000000;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  /* padding: 13px 16px; */\n  /* margin-bottom: 16px; */\n`\n\nconst Input = styled.input`\n  box-sizing: border-box;\n  border-radius: 8px;\n  width: 100%;\n  height: 52px;\n  padding: 0 13px;\n\n  border: none;\n  background: #00000040;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 16px;\n  outline: none;\n  caret-color: ${({ theme }) => theme.colors.primary};\n  &:hover :placeholder-shown {\n    background: #00000020;\n    border-radius: 8px;\n  }\n`\nconst InputEmail = styled.input`\n  box-sizing: border-box;\n  ${props =>\n    props.show\n      ? css`\n          border-radius: 25px;\n          background: red;\n        `\n      : css`\n         border-radius: 8px; \n          /* background: ${({ theme }) => theme.colors.bgd}; */\n          /* border: 1px solid ${({ theme }) => theme.colors.bgm}; */\n        `}\n  width: 100%;\n  height: 52px;\n  padding: 0 13px;\n\n  border: none;\n  background: #00000040;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 16px;\n  outline: none;\n  caret-color: ${({ theme }) => theme.colors.primary};\n  &:hover :placeholder-shown {\n    background: #00000020;\n    border-radius: 8px;\n  }\n`\n\n///////////////////////////////////////////COMPONENT//////////////////////////////////////////////\n\nconst Login = ({ userSignedin, setUserSignedin }) => {\n  const addListRef = useRef()\n  const didRun = useRef(false)\n\n  const [addTaskIsShown, setAddTaskIsShown] = useState(false)\n  const [show, setShow] = useState(true)\n  const [sidebarTab, setSidebarTab] = useState('LOGIN')\n\n  const handleAddListIsShown = e => {\n    setAddListIsShown(prev => !prev)\n  }\n\n  const femail = useSpring({\n    opacity: !show ? 1 : 1,\n    // transform: state\n    //   ? \"scale(1) translateY(0px) \"\n    //   : \"scale(1) translateY(-10px) \",\n\n    // transformOrigin: 'top',\n    transform: show\n      ? 'scaleY(1) translateX(0px) translateY(0px) '\n      : 'scaleY(1) translateX(0px) translateY(-60px) ',\n    // background: show ? '#00000000' : `#073175`,\n\n    config: { mass: 1, tension: 500, friction: 30 }\n  })\n  const favatar = useSpring({\n    opacity: !show ? 1 : 0,\n    // transform: state\n    //   ? \"scale(1) translateY(0px) \"\n    //   : \"scale(1) translateY(-10px) \",\n\n    transformOrigin: 'bottom',\n    transform: show\n      ? 'scale(1) translateX(0px) translateY(0px) '\n      : 'scale(1.6) translateX(0px) translateY(5px) ',\n    // background: show ? '#00000000' : `#073175`,\n\n    config: { mass: 1, tension: 500, friction: 30, delay: 3000 }\n  })\n  const fpassword = useSpring({\n    opacity: !show ? 1 : 0,\n    // transform: state\n    //   ? \"scale(1) translateY(0px) \"\n    //   : \"scale(1) translateY(-10px) \",\n\n    transformOrigin: 'top',\n    transform: !show\n      ? 'scaleY(1) translateX(0px)  translateY(0px)'\n      : 'scaleY(1) translateX(-10px) translateY(60px)',\n\n    config: { mass: 1, tension: 500, friction: 30 }\n  })\n\n  const flabel = useSpring({\n    opacity: show ? 1 : 0,\n    // margin: ' 0 auto',\n    // transformOrigin: 'top',\n    transform: show\n      ? 'scaleY(1) translateX(0px) translateY(0px) '\n      : 'scaleY(1) translateX(100px) translateY(60px) ',\n    //background: show ? '#00000000' : `#073175`,\n    borderRadius: '8px',\n    config: { mass: 1, tension: 500, friction: 30 }\n  })\n\n  const finput = useSpring({\n    opacity: !show ? 1 : 1,\n\n    // transformOrigin: 'top',\n    // transform: show\n    //   ? 'scaleY(1) translateX(0px) translateY(0px) '\n    //   : 'scaleY(1) translateX(0px) translateY(4px) ',\n    background: show ? '#00000000' : `#073175`,\n    width: show ? '100%' : `40%`,\n    margin: ' 0 auto',\n    borderRadius: !show ? '8px' : '25px',\n\n    config: { mass: 1, tension: 500, friction: 30 }\n  })\n\n  const handleTabClick = e => {\n    e.preventDefault()\n\n    setSidebarTab(p => p + e.target.label)\n    console.log(sidebarTab)\n  }\n\n  useEffect(() => {\n    console.log(sidebarTab)\n  })\n\n  return (\n    <Layout>\n      <Styles>\n        <div className='wrapper'>\n          <div className='sideBar'>\n            <div style={{ opacity: 0 }}>\n              <UserInfo />\n            </div>\n\n            <div className='sidebarMain'>\n              <Tabs>\n                <div onClick={e => setSidebarTab('LOGIN')}>\n                  <Tab label='LOGIN' />\n                </div>\n                <div onClick={e => setSidebarTab(e.target.childNode)}>\n                  <Tab label='SIGNOUT' />\n                </div>\n              </Tabs>\n              {sidebarTab}\n              {/* \n              <SidebarTab>LOGIN</SidebarTab>\n              <SidebarTab>SIGNUP</SidebarTab>\n              */}\n            </div>\n\n            <div style={{ opacity: 0 }}>\n              <div className='mode'>Zen</div>\n            </div>\n          </div>\n\n          <div className='content'>\n            <Align ha='center' va='center' width='400px' stack>\n              <animated.div style={femail}>\n                <animated.div style={favatar}>\n                  <Align ha='center' va='center'>\n                    <AvatarSvg />\n                  </Align>\n                </animated.div>\n                <animated.div style={flabel}>\n                  <Label> Email </Label>\n                </animated.div>\n                <animated.div style={finput}>\n                  <InputEmail\n                    autoFocus\n                    placeholder='enter your email here'\n                    onClick={e => setShow(true)}\n                  />\n                </animated.div>\n                {/*<TextField\n                    autoFocus\n                    label='Email'\n                    placeholder='enter your email here'\n                    show={show}\n                 />*/}\n                {/*<Divider transparent height='0px' />*/}\n              </animated.div>\n              <Divider transparent height='16px' />\n              {show && (\n                <Align ha='end' va='center'>\n                  <Link href='/Signedin'>\n                    <a>\n                      {/*<Button>BACK</Button>\n                                            <Button primary>NEXT</Button>*/}\n                      <SubmitSvg flat />\n                    </a>\n                  </Link>\n\n                  <Icon className='big-svg' onClick={e => setShow(false)}>\n                    <SubmitSvg next />\n                  </Icon>\n                </Align>\n              )}\n              {!show && (\n                <animated.div style={fpassword}>\n                  <ShowHide>\n                    <TextField\n                      autoFocus\n                      label='Password'\n                      type='password'\n                      placeholder='enter your Password here'\n                    />\n                    <Divider transparent height='16px' />\n                    <Align va='center' placing>\n                      <Button pad={0.01}>\n                        <div>Create an acount</div>\n                      </Button>\n                      <div style={{ display: 'flex' }}>\n                        <Align ha='end' va='center'>\n                          <IconFlat\n                            className='big-svg-flat'\n                            onClick={e => setShow(true)}\n                          >\n                            <SubmitSvg flat />\n                          </IconFlat>\n\n                          <Icon\n                            className='big-svg'\n                            onClick={e => setShow(true)}\n                          >\n                            <Link href='/Signedin'>\n                              <a>\n                                {/*<Button>BACK</Button>\n<Button primary>NEXT</Button>*/}\n                                <SubmitSvg next />\n                              </a>\n                            </Link>\n                          </Icon>\n                        </Align>\n                      </div>\n                    </Align>\n                  </ShowHide>\n                </animated.div>\n              )}\n              <Divider transparent />\n\n              <ShowHide hide>\n                <TextField\n                  autoFocus\n                  label='Password'\n                  placeholder='enter your Password here'\n                />\n                <Divider />\n\n                <Link href='/Signedin'>\n                  <a>\n                    <Button primary>LOGIN</Button>\n                    <Button>CANCEL</Button>\n                  </a>\n                </Link>\n              </ShowHide>\n            </Align>\n          </div>\n        </div>\n      </Styles>\n    </Layout>\n  )\n}\n\nexport default Login\n"],"mappings":"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;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}