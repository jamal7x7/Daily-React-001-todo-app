{"version":3,"file":"static/webpack/static/development/pages/index.js.98e07f9a7866d5e2fdb7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useEffect, useReducer, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport Layout from '../components/Layout'\nimport { MyProjectsProvider } from '../components/sidebar/ProjectsContext'\nimport TodoList from '../components/TodoList'\nimport { MyTodosProvider } from '../components/TodosContext'\n\nconst Styles = styled.div`\n  .wrapper {\n    width: 100%;\n    height: 100%;\n\n    // padding: 20px;\n    // border: 1px solid rgba(#fff, 0.08);\n    border-radius: 4px;\n    // background-color: $bgm;\n    // border: 1px solid $bgl;\n    // box-shadow: 0 90px 100px -50px rgba(black, 0.4),\n    //   0 50px 70px 10px rgba(black, 0.1);\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 1fr;\n    grid-template-areas: ' sideBar  content ';\n  }\n\n  // * /////////////////////////////////////////////SIDE-BAR/////////////////////////////////////////////// * //\n\n  .sideBar {\n    grid-area: 'sideBar';\n    background: ${({ theme }) => theme.colors.sideBar};\n    border-radius: 4px 0 0 4px;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 140px 1fr;\n    resize: horizontal;\n    overflow: auto;\n  }\n\n  /* .userCard {\n    display: grid;\n    grid-template-columns: 50px 1fr;\n    padding-left: 50px;\n    .userCardAvatar {\n      display: grid;\n      place-items: center;\n    }\n    .userCardName {\n      display: grid;\n      place-items: center start;\n      padding-left: 16px;\n    }\n  } */\n\n  .sideBarList {\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto auto 30px 170px auto;\n    align-content: start;\n    grid-gap: 10px;\n    // height: 100%;\n  }\n\n  .projects {\n    padding-left: 50px;\n    height: 52px;\n    display: grid;\n    place-items: center start;\n  }\n\n  // * ///////////////////////////////////////CONTENT///////////////////////////////////// * //\n\n  .content {\n    grid-area: 'content';\n    background: ${({ theme }) => theme.colors.bgd};\n\n    overflow-anchor: none;\n    border-radius: 0 4px 4px 0;\n  }\n\n  .anchor {\n    overflow-anchor: auto;\n    height: 1px;\n  }\n`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: action.completed\n        }\n      ]\n\n    case 'COMPLETED':\n      return state.map(v => {\n        if (v.id === action.id) {\n          v = { ...v, completed: !v.completed }\n        }\n        return v\n      })\n\n    case 'REORDER':\n      return [...action.reorderedTodos]\n\n    case 'DELETED':\n      return state.filter(v => v.id !== action.id)\n\n    case 'RESET': {\n      console.log(action)\n      return action.payload\n    }\n\n    default:\n      return state\n  }\n}\n\nconst projectsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_LIST':\n      return [\n        ...state,\n        {\n          id: action.id,\n          projectName: action.projectName,\n          totalTodos: 0,\n          remainingTodos: 0\n        }\n      ]\n\n    case 'DELETE_LIST':\n      return state.filter(v => v.id !== action.id)\n\n    default:\n      return state\n  }\n}\n\nconst Index = () => {\n  const addListRef = useRef()\n  const didRun = useRef(false)\n\n  const [addTaskIsShown, setAddTaskIsShown] = useState(false)\n  const [addListIsShown, setAddListIsShown] = useState(false)\n\n  const [todos, dispatch] = useReducer(reducer, [\n    {\n      id: Date.now(),\n      text: 'Read',\n      // completed: true,\n      project: 'default'\n    },\n    {\n      id: Date.now() + 1,\n      text: 'Run',\n      // completed: false,\n      project: 'default'\n    },\n    {\n      id: Date.now() + 2,\n      text: 'Pray',\n      // completed: false,\n      project: 'default'\n    }\n  ])\n  const [projects, projectDispatch] = useReducer(projectsReducer, [\n    {\n      id: Date.now(),\n      projectName: 'Design',\n      totalTodos: 0,\n      remainingTodos: 0\n    }\n  ])\n\n  useEffect(() => {\n    if (!didRun.current) {\n      const raw = localStorage.getItem('data')\n      dispatch({\n        type: 'RESET',\n        payload: JSON.parse(raw)\n      })\n      didRun.current = true\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(todos))\n  }, [todos])\n\n  const handleCheckBox = (e, id) => {\n    e.preventDefault()\n    // console.log(\"done\")\n\n    dispatch({\n      type: 'COMPLETED',\n      id: id,\n      completed: true\n    })\n  }\n\n  const handleAddTask = e => {\n    setAddTaskIsShown(prev => !prev)\n  }\n\n  // a little function to help us with reordering the result\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n  }\n\n  const handleOnDragEnd = result => {\n    // e.preventDefault()\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    if (result.destination.index === result.source.index) {\n      return\n    }\n\n    const reorderedTodos = reorder(\n      todos,\n      result.source.index,\n      result.destination.index\n    )\n    console.log('to', reorderedTodos)\n\n    dispatch({\n      type: 'REORDER',\n      reorderedTodos\n    })\n  }\n\n  const handleAddListIsShown = e => {\n    setAddListIsShown(prev => !prev)\n  }\n\n  return (\n    <Layout>\n      <Styles>\n        <MyProjectsProvider value={{ projects, projectDispatch }}>\n          <MyTodosProvider value={{ todos, dispatch }}>\n            <div className='wrapper'>\n              <Sidebar />\n\n              <div className='content'>\n                <TodoList\n                  // todos={todos}\n                  handleOnDragEnd={handleOnDragEnd}\n                  handleCheckBox={handleCheckBox}\n                  // handleDeleteTodo={handleDeleteTodo}\n                  addTaskIsShown={addTaskIsShown}\n                  // inputRef={inputRef}\n                  handleAddTask={handleAddTask}\n                  // handleSubmit={handleSubmit}\n                />\n              </div>\n            </div>\n          </MyTodosProvider>\n        </MyProjectsProvider>\n      </Styles>\n    </Layout>\n  )\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAsBA;AAAA;AAAA;AA6CA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAGA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AASA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AApBA;AAAA;AAAA;AACA;AADA;AA6BA;AACA;AACA;AACA;AAJA;AA5BA;AAAA;AAAA;AACA;AAmCA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AALA;AAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;;;;A","sourceRoot":""}